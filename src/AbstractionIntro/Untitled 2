     -Encapsulation
     -Inheritance
     -Abstraction
     -Polymorphism
     
     =============================
   ABSRTACTION is a process of showing the features and behaviour but hiding the implementation.
   
   When we do abstraction in programming, we create abstract classes or methods that only show some 
   features and behaviour but we do not  specify the details of implementation.
   
    When we step on gas pedal, it accelarates. But we do not know how it is implemented/happening.
    and depending on the car type the same behaviour or feature might be happening differently.
    
    ================================================
    
    How does abstraction happen in Java?
    2 ways of achieving abstraction in Java
    Creating:
    -abstract classes
    -interfaces
 ==============================================   
 Abstract Classes:
       is used in java to achieve abstraction, and we can 
              use "abstract" keyword when creating the class.
              
   public abstract class File{
          
   }           
   
   public class File{
          
   }   
    
 1) We can not create object from abstract classes 
       File file = new File();  => will not work 
       A bstract classes normally are used high level classes 
                                        and we do not create object from them. 
        They are used to describe properties and behaviour that other 
                                                    sub classes will implement.
            
            FlyingObject
     Plane, Bird, Drone, Helicopter 
    
   FlyingObject here is a good candidate to be abstract class as it is very high level 
                    and can be good base for other sub classes.
           
                         Browser
          safari   Chrome    FireFox    IE  Opera           
    ============================================================================================
    
                        Building
          different types of building can be sub classes for abstract class building
 =======================================================================         
          
       public abstract class File {

	public abstract void open();
	}  
	 
      File is general/abstraction idea and we might have   different types of files. So it is a good candidate for abstract class.                
   
    open() is a abstract method, when  you look at it, we know what it does, but at this point we do not know the implementation. It is hidden.
    
    Abstract method can be added to abstract classes can not be added to normal (non-abstract )classes. It will not have any method body(implementation)
    
    public abstract void method1(String str);
      
 ============================================================================
    
    2) Abstract classes can have abstract methods and non-abstract methods
    
      public abstract class File {

	public abstract void open();
	
	public void close(){
	     System.out.println("Close the software and file");
	}
	
	
	}  
	
	
	File (Abstract)> XLSFile 
	
	-File is an abstract parent class,
	-We cannot instantiate(create object) of File
	-Serves as a base/foundation class for its sub classes
	--It may include abstract methods(methods without body), non-abstract method(methods with body)
	
	XLSFile > is a sub class for abstract class
	        > Concrete class
	        
	        
	 Abstract class > Concrete class.
	 
	 Concrete class is a Non-Abstract child of abstract class.       
========================================================================	
	
	
	File > XLSFile
	     >JPGFile
	===============================
	
Abstract classes:
   - use abstract keyword to create
   - cannot create object
   - can contain abstract methods(without body)
   - can have non-abstract methods
   - instance variables/static variables
   - constructor(s)
   - Abstract classes can have Abstract sub/child classes
   
  abs  abs  abs   abs
   A >  B  > C  >  D  	
     
    Person > Employee > FTEmployee
                      > Contractor
                      
     
                      
     Person: String fullName
           : int age
           : abstract speak
      
     Employee: String jobTitle
             : salary
             : abstarctMethod work
             
     FTEmployee: double bonus
     
     Contractor: hourlyRate
               : contarctPeriod
 ===================================================                          
                      
   abstract class Person
       public abstract void speak();            
       
       
   abstract class Employee extends Person
         public abstract void work();
   
   If a abstract class extends another abstract class it does not have to implement/override 
   abstract method from parent class.
   
   
   class FTE extends Employee 
           
              speak();            
              work();
              
   FTE is a first concrete class  that is responsible for  overriding or providing implementation for all abstract methods from
   parent abstract classes.
   ================================================================================================        
                       
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     